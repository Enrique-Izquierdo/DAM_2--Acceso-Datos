package es.florida.ad;

import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.nio.file.DirectoryNotEmptyException;
import java.nio.file.DirectoryStream.Filter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.security.Identity;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Scanner;

import javax.print.attribute.standard.PrinterInfo;

public class AE01_T1_1_Fitxers {
	
	/**
	 * 
	 * @param rutaRelativaFitxer
	 */

	public static void getInformacio(String rutaRelativaFitxer) {
		File fitxer = new File(rutaRelativaFitxer);		
		try {			
			System.out.println("Nom: " + fitxer.getName());
			System.out.println("Ubicació absoluta: " + fitxer.getAbsolutePath());
			//Cálculo fecha última modificación
			long ultimaModificacion = fitxer.lastModified(); //Fecha en milisegundos contados desde 01/01/1970.
			Date fechaUltimaModif = new Date(ultimaModificacion); //Fecha en formato yyyy--MM-dd.
			String patron = "yyyy-MM-dd HH:mm"; //Con SimpleDateFormat, creamos objeto conversor de formatos Date.
			SimpleDateFormat formatoFechaPersonalizado = new SimpleDateFormat(patron);			
			System.out.println("Última modificació (format data): " + formatoFechaPersonalizado.format(fechaUltimaModif));
			
			System.out.println("Ocult: " + fitxer.isHidden());			
			if (fitxer.isFile()) {
				System.out.println("Tipo: arxiu");
				System.out.println("Grandaria (bytes): " + fitxer.length());
			} else if (fitxer.isDirectory()) {
				System.out.println("Tipos: directori");
				System.out.println("Nombre d´elements: " + fitxer.list().length);
				System.out.println("Espai lliure (GB): " + fitxer.getFreeSpace()/1e9);
				System.out.println("Espai ocupat (GB): " + (fitxer.getTotalSpace() - fitxer.getFreeSpace())/1e9);
				System.out.println("Espai total (GB): " + fitxer.getTotalSpace()/1e9);
			} else {
				System.out.println("El fitxer no és un arxiu, ni un directori");
			}
		} catch (Exception e) {
			if(fitxer.canRead()) {
				e.printStackTrace();
			} else {
				System.out.println("No té permís de lectura.");
			}			
		}		
	}
	
	public static void creaCarpeta() {
		Scanner inputTeclado = new Scanner(System.in);
		System.out.print("Introduïsca el nom de la carpeta a crear: ");
		String nomCarpeta = inputTeclado.next();
		inputTeclado.close();				
		
		File carpeta = new File(nomCarpeta);
		if(carpeta.mkdir()) {
			System.out.println("La carpeta ha sigut creada.");
		} else {
			System.out.println("La carpeta NO ha sigut creada.");
		}
	}
	
	public static void creaFitxer() {
		Scanner inputTeclado = new Scanner(System.in);
		System.out.print("Introduïsca el nom del fitxer (arxiu) a crear: ");
		String nomFitxer = inputTeclado.next();
		inputTeclado.close();			
		
		File fitxer = new File(nomFitxer);
		try {
			if (fitxer.createNewFile()) {
				System.out.println("El fitxer (arxiu) ha sigut creat.");
			} else {
				System.out.println("El fitxer (arxiu) NO ha sigut creat, perquè ja existeix.");
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			if(fitxer.canWrite()) {
				e.printStackTrace();
			} else {
				System.out.println("No té permís d'escriptura.");
			}
		}
	}
	
	public static void elimina() {
		Scanner inputTeclado = new Scanner(System.in);
		System.out.print("Introduïsca el nom del fitxer a eliminar: ");
		String nomFitxer = inputTeclado.next();
		inputTeclado.close();		
		
		try {
			File fitxer = new File(nomFitxer);
			if (fitxer.delete()) {
				System.out.println("El fitxer ha sigut eliminat.");
			} else {
				System.out.println("El fitxer NO ha sigut eliminat. "
						+ "Esborre prèviament els arxius que continga el directori.");
			}
		} catch (NullPointerException e) {
			// TODO: handle exception
			System.out.println("No ha passat la ruta relativa del fitxer.");
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO: handle exception
			System.out.println("No té permisos d'escriptura.");
			e.printStackTrace();
		}		
	}
	
	public static void renomena() {
		Scanner inputTeclado = new Scanner(System.in);
		System.out.print("Introduïsca el nom del fitxer a canviar de nom: ");
		String nomFitxer = inputTeclado.next();
		System.out.print("Introduïsca el nou nom: ");
		String nouNomFitxer = inputTeclado.next();
		inputTeclado.close();
		
		File fitxer = new File(nomFitxer);
		File nouFitxer = new File(nouNomFitxer);
		if(fitxer.renameTo(nouFitxer)) {
			System.out.println("El fitxer ha sigut renomenat.");
		} else {
			System.out.println("El fitxer NO ha sigut renomenat.");
		}
	}
	
	
	public static void main(String[] args) {	
		// TODO Auto-generated method stub		
		
		Boolean continuar = true;
		Scanner entradaTeclado = new Scanner(System.in);
		do {			
			
			System.out.println("\n   Opciones Disponibles\n   ====================\n1 - Veure informació fitxer\n"
					+ "2 - Crear carpeta\n3 - Crear fitxer\n4 - Elimina\n5 - Renomena\n6 - EIXIR");		
			System.out.print("Seleccione una opció (del 1 al 6): ");
			String opcion = entradaTeclado.next();
			
							
			switch (opcion) {
			case "1":
				System.out.println("\nHa seleccionat: opció 1");
				getInformacio(args[0]);
				break;
			case "2":
				System.out.println("\nHa seleccionat: opció 2");
				creaCarpeta();
				break;
			case "3":			
				System.out.println("\nHa seleccionat: opció 3");
				creaFitxer();
				break;
			case "4":
				System.out.println("\nHa seleccionat: opció 4");
				elimina();
				break;
			case "5":
				System.out.println("\nHa seleccionat: opció 5");
				renomena();
				break;
			case "6":
				continuar = false;
				break;
			default:
				System.out.println("\nOpció seleccionada, no disponible.");
				break;
			}
			
//			System.out.println("\nPress enter to continue");
//			try{System.in.read();}
//			        catch(Exception e){}
			
		} while (continuar);
		
		entradaTeclado.close();
	}

}
